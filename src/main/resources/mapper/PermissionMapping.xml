<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.zk.spring.cloud.gateway.security.dao.PermissionMapper">

    <resultMap id="PermissionsResultMap" type="com.github.zk.spring.cloud.gateway.security.pojo.PermissionInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="group_id" property="groupId" jdbcType="BIGINT"/>
        <result column="url_name" property="urlName" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="open" property="open" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="fixed" property="fixed" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <collection property="roleInfos" ofType="map" column="id" select="selectRoles">
        </collection>
    </resultMap>

    <resultMap id="RolesResultMap" type="com.github.zk.spring.cloud.gateway.security.pojo.RoleInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="describe" property="describe" jdbcType="VARCHAR"/>
    </resultMap>



    <sql id="Base_Column_List">
        id, group_id, url_name, url, open, description, fixed, create_time
    </sql>

    <select id="selectPage" resultMap="PermissionsResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway_permission gp
            left join
            (select dict_name, dict_val from gateway_dict where dict_type_id = 1) gd
                on gp.open = gd.dict_val
            ${ew.customSqlSegment}
    </select>

    <select id="selectPermissionsByGroupIds" resultMap="PermissionsResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway_permission gp
        left join
        (select dict_name, dict_val from gateway_dict where dict_type_id = 1) gd
        on gp.open = gd.dict_val
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ew.customSqlSegment}
        </if>
        <if test="ew.customSqlSegment == null or ew.customSqlSegment == ''">
            where 1 = 1
        </if>
        and group_id in
        <foreach collection="list" index="index" item="ids" separator="," open="(" close=")">
            #{ids}
        </foreach>
    </select>

    <select id="selectRoles" resultMap="RolesResultMap">
        select tr.id, role_name
        from t_role tr
            left join gateway_role_permission rp
                on tr.id = rp.role_id
        where rp.permission_id = #{id}
    </select>

    <select id="selectGroupPermissionsPage" resultMap="PermissionsResultMap">
        select gpg.group_name, gpg.create_time AS group_create_time, gp.*
        from gateway_permission_group gpg
        right join gateway_permission gp ON gpg.id = gp.group_id
        left join
        (select dict_name, dict_val from gateway_dict where dict_type_id = 1) gd
        on gp.open = gd.dict_val
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ew.customSqlSegment}
        </if>
        <if test="ew.customSqlSegment == null or ew.customSqlSegment == ''">
            where 1 = 1
        </if>
        and group_id != 0
        group by group_id
        union all
        select gpg.group_name, gpg.create_time as group_create_time, gp.*
        from gateway_permission_group gpg
        right join gateway_permission gp on gpg.id = gp.group_id
        left join
        (select dict_name, dict_val from gateway_dict where dict_type_id = 1) gd
        on gp.open = gd.dict_val
        <if test="ew.customSqlSegment != null and ew.customSqlSegment != ''">
            ${ew.customSqlSegment}
        </if>
        <if test="ew.customSqlSegment == null or ew.customSqlSegment == ''">
            where 1 = 1
        </if>
        and group_id = 0

        order by group_create_time desc, create_time desc
    </select>

</mapper>